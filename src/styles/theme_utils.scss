// Define a custom mixin that takes in the current theme
/*Material theme*/
@use '@angular/material/' as mat;
@use 'sass:map';

@mixin theme-color-grabber($theme) {
    // Parse the theme and create variables for each color in the pallete
    $primary: map.get($theme, primary);
    $accent: map.get($theme, accent);
    $warn: map.get($theme, warn);
    $background: map.get($theme, 'background');
    $foreground: map.get($theme, 'foreground');
    @debug $background;

    // Create theme specfic styles
    .theme-style {
        background-color: mat.get-color-from-palette($background, 'card');
        color: mat.get-color-from-palette($foreground, 'text');
    }
    .theme-text {
        color: mat.get-color-from-palette($foreground, 'text');
    }

    .primary-text {
        color: mat.get-color-from-palette($primary, 'default');
    }
    .accent-text {
        color: mat.get-color-from-palette($accent, 'default');
    }
    .warn-text {
        color: mat.get-color-from-palette($warn, 'default');
    }
    .primaryColorBG {
        background-color: mat.get-color-from-palette($primary, 'default');
    }
    .accentColorBG {
        background-color: mat.get-color-from-palette($accent, 'default');
    }
    .warnColorBG {
        background-color: mat.get-color-from-palette($warn, 'default');
    }
}
